{"version":3,"sources":["components/VariantSelector.js","components/Product.js","components/LineItem.js","components/Cart.js","components/CustomerAuth.js","checkout.js","App.js","index.js"],"names":["VariantSelector","className","name","this","props","option","key","onChange","handleOptionChange","values","map","value","Component","Product","state","selectedOptions","bind","handleQuantityChange","findImage","product","options","forEach","selector","setState","prevState","images","variantId","primary","filter","image","variant_ids","includes","src","event","target","selectedVariant","variants","edges","find","variant","node","every","selectedOption","selectedVariantImage","selectedVariantQuantity","quantity","console","log","window","parent","postMessage","variantImage","variantQuantity","variant_selectors","id","toString","length","alt","title","price","min","type","defaultValue","onClick","addVariantToCart","addVariantToCart_Test","LineItem","decrementQuantity","incrementQuantity","lineItemId","updateLineItemInCart","line_item","toFixed","removeLineItemInCart","Cart","openCheckout","open","checkout","webUrl","line_items","lineItems","isCartOpen","handleCartClose","subtotalPrice","totalTax","totalPrice","CustomerAuth","email","password","nonFieldErrorMessage","emailErrorMessage","passwordErrorMessage","handleInputChange","createCustomerAccount","resetErrorMessages","resetInputFields","newCustomer","loginCustomerAccount","input","customerCreate","variables","then","res","data","customer","closeCustomerAuth","showAccountVerificationMessage","userErrors","error","field","message","customerAccessTokenCreate","customerAccessToken","associateCustomerCheckout","accessToken","isCustomerAuthOpen","placeholder","handleSubmit","gql","CustomerAuthWithMutation","compose","graphql","CheckoutFragment","createCheckout","checkoutLineItemsAdd","checkoutLineItemsUpdate","checkoutLineItemsRemove","checkoutCustomerAssociate","checkoutId","parseInt","handleCartOpen","lineItemIds","App","isNewCustomer","products","openCustomerAuth","checkoutCreate","getAttribute","accountVerificationMessage","setTimeout","loading","data-customer-type","shop","description","query","AppWithDataAndMutation","httpLink","createHttpLink","uri","middlewareLink","setContext","headers","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dd1bb87.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass VariantSelector extends Component {\n  render() {\n    return (\n      <select\n        className=\"Product__option\"\n        name={this.props.option.name}\n        key={this.props.option.name}\n        onChange={this.props.handleOptionChange}\n      >\n        {this.props.option.values.map((value) => {\n          return (\n            <option value={value} key={`${this.props.option.name}-${value}`}>{`${value}`}</option>\n          )\n        })}\n      </select>\n    );\n  }\n}\n\nexport default VariantSelector;\n\n//                 <button type=\"submit\" name=\"add\" aria-label=\"Add to cart\" class=\"btn product-form__cart-submit btn--secondary-accent\" data-add-to-cart=\"\">\n//                   <span data-add-to-cart-text=\"\">Add to cart</span>\n//                   <span class=\"hide\" data-loader=\"\">\n//                     <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" class=\"icon icon-spinner\" viewBox=\"0 0 20 20\"><path d=\"M7.229 1.173a9.25 9.25 0 1 0 11.655 11.412 1.25 1.25 0 1 0-2.4-.698 6.75 6.75 0 1 1-8.506-8.329 1.25 1.25 0 1 0-.75-2.385z\" fill=\"#919EAB\"></path></svg>\n//                   </span>\n//                 </button>\n\n// _initAddToCart: function() {\n//   $(this.selectors.productForm, this.$container).on(\n//     'submit',\n//     function(evt) {\n//       if (this.$addToCart.is('[aria-disabled]')) {\n//         evt.preventDefault();\n//         return;\n//       }\n\n//       if (!this.ajaxEnabled) return;\n\n//       evt.preventDefault();\n\n//       this.$previouslyFocusedElement = $(':focus');\n\n//       var isInvalidQuantity = this.$quantityInput.val() <= 0;\n\n//       if (isInvalidQuantity) {\n//         this._showErrorMessage(theme.strings.quantityMinimumMessage);\n//         return;\n//       }\n\n//       if (!isInvalidQuantity && this.ajaxEnabled) {\n//         // disable the addToCart and dynamic checkout button while\n//         // request/cart popup is loading and handle loading state\n//         this._handleButtonLoadingState(true);\n//         var $data = $(this.selectors.productForm, this.$container);\n//         this._addItemToCart($data);\n//         return;\n//       }\n//     }.bind(this)\n//   );\n// },\n","import React, {Component} from 'react';\nimport VariantSelector from './VariantSelector';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: {}\n    };\n\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.handleQuantityChange = this.handleQuantityChange.bind(this);\n    this.findImage = this.findImage.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.product.options.forEach((selector) => {\n      this.setState((prevState) => ({\n        selectedOptions:{\n          ...prevState.selectedOptions,\n          [selector.name]: selector.values[0]\n        }\n      }));\n    });\n  }\n\n  findImage(images, variantId) {\n    const primary = images[0];\n\n    const image = images.filter(function (image) {\n      return image.variant_ids.includes(variantId);\n    })[0];\n\n    return (image || primary).src;\n  }\n\n  handleOptionChange(event) {\n    const target = event.target\n    let selectedOptions = this.state.selectedOptions;\n    selectedOptions[target.name] = target.value;\n\n    const selectedVariant = this.props.product.variants.edges.find((variant) => {\n      return variant.node.selectedOptions.every((selectedOption) => {\n        return selectedOptions[selectedOption.name] === selectedOption.value;\n      });\n    }).node;\n\n    this.setState({\n      selectedVariant: selectedVariant,\n      selectedVariantImage: selectedVariant.image.src\n    });\n  }\n\n  handleQuantityChange(event) {\n    this.setState({\n      selectedVariantQuantity: event.target.value\n    });\n  }\n\n  //+ Ivan K\n  addVariantToCart_Test(variantId, quantity) {\n    console.log('postMessage', 'setItemToCart_AfterQuiz');\n    window.parent.postMessage({\"setItemToCart_AfterQuiz\": [1,2,3,4,5,6]}, \"*\");\n  }\n//- Ivan K\n\n  render() {\n    let variantImage = this.state.selectedVariantImage || this.props.product.images.edges[0].node.src\n    let variant = this.state.selectedVariant || this.props.product.variants.edges[0].node\n    let variantQuantity = this.state.selectedVariantQuantity || 1\n    let variant_selectors = this.props.product.options.map((option) => {\n      return (\n        <VariantSelector\n          handleOptionChange={this.handleOptionChange}\n          key={option.id.toString()}\n          option={option}\n        />\n      );\n    });\n    return (\n      <div className=\"Product\">\n        {this.props.product.images.edges.length ? <img src={variantImage} alt={`${this.props.product.title} product shot`}/> : null}\n        <h5 className=\"Product__title\">{this.props.product.title}</h5>\n        <span className=\"Product__price\">${variant.price}</span>\n        {variant_selectors}\n        <label className=\"Product__option\">\n          Quantity\n          <input min=\"1\" type=\"number\" defaultValue={variantQuantity} onChange={this.handleQuantityChange}></input>\n        </label>\n        <button className=\"Product__buy button\" onClick={() => this.props.addVariantToCart(variant.id, variantQuantity)}>Add to Cart</button>\n      \n      {/* //test Ivan K */}\n     <div>\n       <br/>\n          <button className=\"Product__buy button\" onClick={() => this.addVariantToCart_Test(variant.id, variantQuantity)}>Click ME</button>\n      </div>\n      {/* //test  Ivan K*/}\n      \n      </div>\n    );\n  }\n}\n\nexport default Product;\n\n\n//https://ikebanna.myshopify.com/cart/33707716706363:4\n","import React, {Component} from 'react';\n\nclass LineItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.decrementQuantity = this.decrementQuantity.bind(this);\n    this.incrementQuantity = this.incrementQuantity.bind(this);\n  }\n\n  decrementQuantity(lineItemId) {\n    this.props.updateLineItemInCart(lineItemId, this.props.line_item.quantity - 1)\n  }\n\n  incrementQuantity(lineItemId) {\n    this.props.updateLineItemInCart(lineItemId, this.props.line_item.quantity + 1)\n  }\n\n  render() {\n    return (\n      <li className=\"Line-item\">\n        <div className=\"Line-item__img\">\n          {this.props.line_item.variant.image ? <img src={this.props.line_item.variant.image.src} alt={`${this.props.line_item.title} product shot`}/> : null}\n        </div>\n        <div className=\"Line-item__content\">\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__variant-title\">\n              {this.props.line_item.variant.title}\n            </div>\n            <span className=\"Line-item__title\">\n              {this.props.line_item.title}\n            </span>\n          </div>\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__quantity-container\">\n              <button className=\"Line-item__quantity-update\" onClick={() => this.decrementQuantity(this.props.line_item.id)}>-</button>\n              <span className=\"Line-item__quantity\">{this.props.line_item.quantity}</span>\n              <button className=\"Line-item__quantity-update\" onClick={() => this.incrementQuantity(this.props.line_item.id)}>+</button>\n            </div>\n            <span className=\"Line-item__price\">\n              $ { (this.props.line_item.quantity * this.props.line_item.variant.price).toFixed(2) }\n            </span>\n            <button className=\"Line-item__remove\" onClick={()=> this.props.removeLineItemInCart(this.props.line_item.id)}>×</button>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default LineItem;\n","import React, {Component} from 'react';\nimport LineItem from './LineItem';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.openCheckout = this.openCheckout.bind(this);\n  }\n\n  openCheckout() {\n    window.open(this.props.checkout.webUrl);\n  }\n\n  render() {\n    let line_items = this.props.checkout.lineItems.edges.map((line_item) => {\n      return (\n        <LineItem\n          removeLineItemInCart={this.props.removeLineItemInCart}\n          updateLineItemInCart={this.props.updateLineItemInCart}\n          key={line_item.node.id.toString()}\n          line_item={line_item.node}\n        />\n      );\n    });\n\n    return (\n      <div className={`Cart ${this.props.isCartOpen ? 'Cart--open' : ''}`}>\n        <header className=\"Cart__header\">\n          <h2>Cart</h2>\n          <button\n            onClick={this.props.handleCartClose}\n            className=\"Cart__close\">\n            ×\n          </button>\n        </header>\n        <ul className=\"Cart__line-items\">\n          {line_items}\n        </ul>\n        <footer className=\"Cart__footer\">\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Subtotal</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.subtotalPrice}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Taxes</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalTax}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Total</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalPrice}</span>\n            </div>\n          </div>\n          <button className=\"Cart__checkout button\" onClick={this.openCheckout}>Checkout</button>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Cart;\n","import React, {Component} from 'react';\nimport { graphql } from 'react-apollo';\nimport {flowRight as compose} from 'lodash';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nclass CustomerAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      nonFieldErrorMessage: null,\n      emailErrorMessage: null,\n      passwordErrorMessage: null\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.createCustomerAccount = this.createCustomerAccount.bind(this);\n    this.resetErrorMessages = this.resetErrorMessages.bind(this);\n    this.resetInputFields = this.resetInputFields.bind(this);\n  }\n\n  static propTypes = {\n    customerCreate: PropTypes.func.isRequired,\n    customerAccessTokenCreate: PropTypes.func.isRequired,\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  resetErrorMessages(){\n    this.setState({\n      nonFieldErrorMessage: null,\n      emailErrorMessage: null,\n      passwordErrorMessage: null\n    });\n  }\n\n  resetInputFields(){\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  handleSubmit(email, password){\n    this.resetErrorMessages();\n    if (this.props.newCustomer) {\n      this.createCustomerAccount(email, password)\n    } else {\n      this.loginCustomerAccount(email, password)\n    }\n  }\n\n  createCustomerAccount(email, password){\n    const input = {\n      email: email,\n      password: password\n    }\n    this.props.customerCreate(\n      { variables: { input }\n      }).then((res) => {\n        if (res.data.customerCreate.customer){\n           this.props.closeCustomerAuth();\n           this.props.showAccountVerificationMessage();\n        } else {\n          res.data.customerCreate.userErrors.forEach(function (error) {\n            if (error.field) {\n              this.setState({\n                [error.field + \"ErrorMessage\"]: error.message\n              });\n            } else {\n              this.setState({\n                nonFieldErrorMessage: error.message\n              });\n            }\n          }.bind(this));\n        }\n    });\n  }\n\n  loginCustomerAccount(email, password){\n    const input = {\n      email: email,\n      password: password\n    }\n    this.props.customerAccessTokenCreate(\n      { variables: { input }\n      }).then((res) => {\n      if (res.data.customerAccessTokenCreate.customerAccessToken) {\n        this.props.associateCustomerCheckout(res.data.customerAccessTokenCreate.customerAccessToken.accessToken);\n      } else {\n        res.data.customerAccessTokenCreate.userErrors.forEach(function (error) {\n          if (error.field != null) {\n            this.setState({\n              [error.field + \"ErrorMessage\"]: error.message\n            });\n          } else {\n            this.setState({\n              nonFieldErrorMessage: error.message\n            });\n          }\n        }.bind(this));\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className={`CustomerAuth ${this.props.isCustomerAuthOpen ? 'CustomerAuth--open' : ''}`}>\n        <button\n          onClick={() => { this.props.closeCustomerAuth(); this.resetErrorMessages(); this.resetInputFields();}}\n          className=\"CustomerAuth__close\">\n          ×\n        </button>\n        <div className=\"CustomerAuth__body\">\n          <h2 className=\"CustomerAuth__heading\">{this.props.newCustomer ? 'Create your Account' : 'Log in to your account'}</h2>\n          {this.state.nonFieldErrorMessage &&\n            <div className=\"error\">{this.state.nonFieldErrorMessage}</div>\n          }\n          <label className=\"CustomerAuth__credential\">\n            <input className=\"CustomerAuth__input\" type=\"email\" placeholder=\"Email\" name={\"email\"} value={this.state.email} onChange={this.handleInputChange}></input>\n            {this.state.emailErrorMessage &&\n              <div className=\"error\">{this.state.emailErrorMessage}</div>\n            }\n          </label>\n          <label className=\"CustomerAuth__credential\">\n            <input className=\"CustomerAuth__input\" type=\"password\" placeholder=\"Password\" name={\"password\"} value={this.state.password} onChange={this.handleInputChange}></input>\n            {this.state.passwordErrorMessage &&\n              <div className=\"error\">{this.state.passwordErrorMessage}</div>\n            }\n          </label>\n          <button className=\"CustomerAuth__submit button\" type=\"submit\" onClick={() => this.handleSubmit(this.state.email, this.state.password)}>{this.props.newCustomer ? 'Create Account' : 'Log in'}</button>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nconst customerCreate = gql`\n  mutation customerCreate($input: CustomerCreateInput!) {\n    customerCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customer {\n        id\n      }\n    }\n  }\n`;\n\nconst customerAccessTokenCreate = gql`\n  mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n\nconst CustomerAuthWithMutation = compose(\n  graphql(customerCreate, {name: \"customerCreate\"}),\n  graphql(customerAccessTokenCreate, {name: \"customerAccessTokenCreate\"})\n)(CustomerAuth);\n\nexport default CustomerAuthWithMutation;\n","import gql from 'graphql-tag';\n\nconst CheckoutFragment = gql`\n  fragment CheckoutFragment on Checkout {\n    id\n    webUrl\n    totalTax\n    subtotalPrice\n    totalPrice\n    lineItems (first: 250) {\n      edges {\n        node {\n          id\n          title\n          variant {\n            id\n            title\n            image {\n              src\n            }\n            price\n          }\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const createCheckout = gql`\n  mutation checkoutCreate ($input: CheckoutCreateInput!){\n    checkoutCreate(input: $input) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsAdd = gql`\n  mutation checkoutLineItemsAdd ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsUpdate = gql`\n  mutation checkoutLineItemsUpdate ($checkoutId: ID!, $lineItems: [CheckoutLineItemUpdateInput!]!) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsRemove = gql`\n  mutation checkoutLineItemsRemove ($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutCustomerAssociate = gql`\n  mutation checkoutCustomerAssociate($checkoutId: ID!, $customerAccessToken: String!) {\n    checkoutCustomerAssociate(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {\n      userErrors {\n        field\n        message\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport function addVariantToCart(variantId, quantity){\n  this.props.checkoutLineItemsAdd(\n    { variables: { checkoutId: this.state.checkout.id, lineItems:  [{variantId, quantity: parseInt(quantity, 10)}] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsAdd.checkout\n    });\n  });\n\n  this.handleCartOpen();\n}\n\nexport function updateLineItemInCart(lineItemId, quantity){\n  this.props.checkoutLineItemsUpdate(\n    { variables: { checkoutId: this.state.checkout.id, lineItems: [{id: lineItemId, quantity: parseInt(quantity, 10)}] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsUpdate.checkout\n    });\n  });\n}\n\nexport function removeLineItemInCart(lineItemId){\n  this.props.checkoutLineItemsRemove(\n    { variables: { checkoutId: this.state.checkout.id, lineItemIds: [lineItemId] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsRemove.checkout\n    });\n  });\n}\n\nexport function associateCustomerCheckout(customerAccessToken){\n  this.props.checkoutCustomerAssociate(\n    { variables: { checkoutId: this.state.checkout.id, customerAccessToken: customerAccessToken }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutCustomerAssociate.checkout,\n      isCustomerAuthOpen: false\n    });\n  });\n}\n","import React, { Component } from 'react';\nimport Product from './components/Product';\nimport Cart from './components/Cart';\nimport CustomerAuthWithMutation from './components/CustomerAuth';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'react-apollo';\nimport {flowRight as compose} from 'lodash';\nimport gql from 'graphql-tag';\nimport {\n  createCheckout,\n  checkoutLineItemsAdd,\n  checkoutLineItemsUpdate,\n  checkoutLineItemsRemove,\n  checkoutCustomerAssociate,\n  addVariantToCart,\n  updateLineItemInCart,\n  removeLineItemInCart,\n  associateCustomerCheckout\n} from './checkout';\n\n// class Iframe extends Component{ \n//   render() {\n//   return(         \n//     <div className=\"quitz-wrapper\">          \n//       <iframe src={this.props.src} height={this.props.height} width={this.props.width}/>         \n//     </div>\n//   )\n// }\n// }\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isCartOpen: false,\n      isCustomerAuthOpen: false,\n      isNewCustomer: false,\n      products: [],\n      checkout: { lineItems: { edges: [] } }\n    };\n\n    this.handleCartClose = this.handleCartClose.bind(this);\n    this.handleCartOpen = this.handleCartOpen.bind(this);\n    this.openCustomerAuth = this.openCustomerAuth.bind(this);\n    this.closeCustomerAuth = this.closeCustomerAuth.bind(this);\n    this.addVariantToCart = addVariantToCart.bind(this);\n    this.updateLineItemInCart = updateLineItemInCart.bind(this);\n    this.removeLineItemInCart = removeLineItemInCart.bind(this);\n    this.showAccountVerificationMessage = this.showAccountVerificationMessage.bind(this);\n    this.associateCustomerCheckout = associateCustomerCheckout.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.createCheckout({\n      variables: {\n        input: {}\n      }}).then((res) => {\n      this.setState({\n        checkout: res.data.checkoutCreate.checkout\n      });\n    });\n  }\n\n  static propTypes = {\n    data: PropTypes.shape({\n      loading: PropTypes.bool,\n      error: PropTypes.object,\n      shop: PropTypes.object,\n    }).isRequired,\n    createCheckout: PropTypes.func.isRequired,\n    checkoutLineItemsAdd: PropTypes.func.isRequired,\n    checkoutLineItemsUpdate: PropTypes.func.isRequired\n  }\n\n  handleCartOpen() {\n    this.setState({\n      isCartOpen: true,\n    });\n  }\n\n  handleCartClose() {\n    this.setState({\n      isCartOpen: false,\n    });\n  }\n\n  openCustomerAuth(event) {\n    if (event.target.getAttribute('data-customer-type') === \"new-customer\") {\n      this.setState({\n        isNewCustomer: true,\n        isCustomerAuthOpen: true\n      });\n    } else {\n      this.setState({\n        isNewCustomer: false,\n        isCustomerAuthOpen: true\n      });\n    }\n  }\n\n  showAccountVerificationMessage(){\n    this.setState({ accountVerificationMessage: true });\n    setTimeout(() => {\n     this.setState({\n       accountVerificationMessage: false\n     })\n   }, 5000);\n  }\n\n  closeCustomerAuth() {\n    this.setState({\n      isCustomerAuthOpen: false,\n    });\n  }\n\n  render() {\n    if (this.props.data.loading) {\n      return <p>Loading ...</p>;\n    }\n    if (this.props.data.error) {\n      return <p>{this.props.data.error.message}</p>;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"Flash__message-wrapper\">\n          <p className={`Flash__message ${this.state.accountVerificationMessage ? 'Flash__message--open' : ''}`}>We have sent you an email, please click the link included to verify your email address</p>\n        </div>\n        <CustomerAuthWithMutation\n          closeCustomerAuth={this.closeCustomerAuth}\n          isCustomerAuthOpen={this.state.isCustomerAuthOpen}\n          newCustomer={this.state.isNewCustomer}\n          associateCustomerCheckout={this.associateCustomerCheckout}\n          showAccountVerificationMessage={this.showAccountVerificationMessage}\n        />\n        <header className=\"App__header\">\n          <ul className=\"App__nav\">\n            <li className=\"button App__customer-actions\" onClick={this.openCustomerAuth} data-customer-type=\"new-customer\">Create an Account</li>\n            <li className=\"login App__customer-actions\" onClick={this.openCustomerAuth}>Log in</li>\n          </ul>\n          {!this.state.isCartOpen &&\n            <div className=\"App__view-cart-wrapper\">\n              <button className=\"App__view-cart\" onClick={()=> this.setState({isCartOpen: true})}>Cart</button>\n            </div>\n          }\n          <div className=\"App__title\">\n            <h1>{this.props.data.shop.name}: React Example</h1>\n            <h2>{this.props.data.shop.description}</h2>\n          </div>\n        </header>\n        {/* <Iframe src=\"https://quiz.askwhai.com/?env=production&quiz=1781&store=ikebanna.myshopify.com\" height=\"600px\" width=\"100%\" />  */}\n        <div className=\"Product-wrapper\">\n          { this.props.data.shop.products.edges.map(product =>\n            <Product addVariantToCart={this.addVariantToCart} checkout={this.state.checkout} key={product.node.id.toString()} product={product.node} />\n          )}\n        </div>\n        <Cart\n          removeLineItemInCart={this.removeLineItemInCart}\n          updateLineItemInCart={this.updateLineItemInCart}\n          checkout={this.state.checkout}\n          isCartOpen={this.state.isCartOpen}\n          handleCartClose={this.handleCartClose}\n          customerAccessToken={this.state.customerAccessToken}\n        />\n      </div>\n    );\n  }\n}\n\nconst query = gql`\n  query query {\n    shop {\n      name\n      description\n      products(first:20) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            title\n            options {\n              id\n              name\n              values\n            }\n            variants(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  id\n                  title\n                  selectedOptions {\n                    name\n                    value\n                  }\n                  image {\n                    src\n                  }\n                  price\n                }\n              }\n            }\n            images(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AppWithDataAndMutation = compose(\n  graphql(query),\n  graphql(createCheckout, {name: \"createCheckout\"}),\n  graphql(checkoutLineItemsAdd, {name: \"checkoutLineItemsAdd\"}),\n  graphql(checkoutLineItemsUpdate, {name: \"checkoutLineItemsUpdate\"}),\n  graphql(checkoutLineItemsRemove, {name: \"checkoutLineItemsRemove\"}),\n  graphql(checkoutCustomerAssociate, {name: \"checkoutCustomerAssociate\"})\n)(App);\n\nexport default AppWithDataAndMutation;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport './app.css';\n\n// const httpLink = createHttpLink({ uri: 'https://graphql.myshopify.com/api/graphql' })\nconst httpLink = createHttpLink({ uri: 'https://ikebanna.myshopify.com/api/graphql' })\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    'X-Shopify-Storefront-Access-Token': '2ab194bb1908b09935b0629edb28f45b'\n  }\n}))\n\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render((\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}