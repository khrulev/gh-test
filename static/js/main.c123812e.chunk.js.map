{"version":3,"sources":["components/VariantSelector.js","components/Product.js","components/LineItem.js","components/Cart.js","components/CustomerAuth.js","checkout.js","App.js","index.js"],"names":["VariantSelector","className","name","this","props","option","key","onChange","handleOptionChange","values","map","value","Component","Product","state","selectedOptions","bind","handleQuantityChange","findImage","product","options","forEach","selector","setState","prevState","images","variantId","primary","filter","image","variant_ids","includes","src","event","target","selectedVariant","variants","edges","find","variant","node","every","selectedOption","selectedVariantImage","selectedVariantQuantity","quantity","console","log","window","parent","postMessage","variantImage","variantQuantity","variant_selectors","id","toString","length","alt","title","price","min","type","defaultValue","LineItem","decrementQuantity","incrementQuantity","lineItemId","updateLineItemInCart","line_item","onClick","toFixed","removeLineItemInCart","CustomerAuth","email","password","nonFieldErrorMessage","emailErrorMessage","passwordErrorMessage","handleInputChange","createCustomerAccount","resetErrorMessages","resetInputFields","newCustomer","loginCustomerAccount","input","customerCreate","variables","then","res","data","customer","closeCustomerAuth","showAccountVerificationMessage","userErrors","error","field","message","customerAccessTokenCreate","customerAccessToken","associateCustomerCheckout","accessToken","isCustomerAuthOpen","placeholder","handleSubmit","gql","compose","graphql","CheckoutFragment","createCheckout","checkoutLineItemsAdd","checkoutLineItemsUpdate","checkoutLineItemsRemove","checkoutCustomerAssociate","addVariantToCart","checkoutId","checkout","lineItems","parseInt","handleCartOpen","lineItemIds","App","isCartOpen","isNewCustomer","products","pageQuiz","selectedOption2","handleCartClose","openCustomerAuth","openNextQuitzPage","handleOptionChange_YesNo","checkoutCreate","getAttribute","accountVerificationMessage","setTimeout","changeEvent","loading","href","class","width","height","checked","shop","addVariantToCart_Test","query","AppWithDataAndMutation","httpLink","createHttpLink","uri","middlewareLink","setContext","headers","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c123812e.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass VariantSelector extends Component {\n  render() {\n    return (\n      <select\n        className=\"Product__option\"\n        name={this.props.option.name}\n        key={this.props.option.name}\n        onChange={this.props.handleOptionChange}\n      >\n        {this.props.option.values.map((value) => {\n          return (\n            <option value={value} key={`${this.props.option.name}-${value}`}>{`${value}`}</option>\n          )\n        })}\n      </select>\n    );\n  }\n}\n\nexport default VariantSelector;","import React, {Component} from 'react';\nimport VariantSelector from './VariantSelector';\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: {}\n    };\n\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.handleQuantityChange = this.handleQuantityChange.bind(this);\n    this.findImage = this.findImage.bind(this);\n  }\n\n  componentWillMount() {\n    this.props.product.options.forEach((selector) => {\n      this.setState((prevState) => ({\n        selectedOptions:{\n          ...prevState.selectedOptions,\n          [selector.name]: selector.values[0]\n        }\n      }));\n    });\n  }\n\n  findImage(images, variantId) {\n    const primary = images[0];\n\n    const image = images.filter(function (image) {\n      return image.variant_ids.includes(variantId);\n    })[0];\n\n    return (image || primary).src;\n  }\n\n  handleOptionChange(event) {\n    const target = event.target\n    let selectedOptions = this.state.selectedOptions;\n    selectedOptions[target.name] = target.value;\n\n    const selectedVariant = this.props.product.variants.edges.find((variant) => {\n      return variant.node.selectedOptions.every((selectedOption) => {\n        return selectedOptions[selectedOption.name] === selectedOption.value;\n      });\n    }).node;\n\n    this.setState({\n      selectedVariant: selectedVariant,\n      selectedVariantImage: selectedVariant.image.src\n    });\n  }\n\n  handleQuantityChange(event) {\n    this.setState({\n      selectedVariantQuantity: event.target.value\n    });\n  }\n\n  //+ Ivan K\n  addVariantToCart_Test(variantId, quantity) {\n    console.log('postMessage', 'setItemToCart_AfterQuiz');\n    window.parent.postMessage({\"setItemToCart_AfterQuiz\": [1,2,3,4,5,6]}, \"*\");\n  }\n//- Ivan K\n\n  render() {\n    let variantImage = this.state.selectedVariantImage || this.props.product.images.edges[0].node.src\n    let variant = this.state.selectedVariant || this.props.product.variants.edges[0].node\n    let variantQuantity = this.state.selectedVariantQuantity || 1\n    let variant_selectors = this.props.product.options.map((option) => {\n      return (\n        <VariantSelector\n          handleOptionChange={this.handleOptionChange}\n          key={option.id.toString()}\n          option={option}\n        />\n      );\n    });\n    \n    return (\n      <div className=\"Product\">\n        {this.props.product.images.edges.length ? <img src={variantImage} alt={`${this.props.product.title} product shot`}/> : null}\n        <h5 className=\"Product__title\">{this.props.product.title}</h5>\n        <span className=\"Product__price\">${variant.price}</span>\n        {variant_selectors}\n        <label className=\"Product__option\">\n          Quantity\n          <input min=\"1\" type=\"number\" defaultValue={variantQuantity} onChange={this.handleQuantityChange}></input>\n        </label>\n        {/* <button className=\"Product__buy button\" onClick={() => this.props.addVariantToCart(variant.id, variantQuantity)}>Add to Cart</button> */}\n      \n      {/* //test Ivan K */}\n      {/* <div>\n          <br/>\n          <button className=\"Product__buy button\" onClick={() => this.addVariantToCart_Test(variant.id, variantQuantity)}>Click ME</button>\n      </div> */}\n      {/* //test  Ivan K */}\n      \n      </div>\n    );\n  }\n}\n\nexport default Product;\n\n\n//https://ikebanna.myshopify.com/cart/33707716706363:4\n","import React, {Component} from 'react';\n\nclass LineItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.decrementQuantity = this.decrementQuantity.bind(this);\n    this.incrementQuantity = this.incrementQuantity.bind(this);\n  }\n\n  decrementQuantity(lineItemId) {\n    this.props.updateLineItemInCart(lineItemId, this.props.line_item.quantity - 1)\n  }\n\n  incrementQuantity(lineItemId) {\n    this.props.updateLineItemInCart(lineItemId, this.props.line_item.quantity + 1)\n  }\n\n  render() {\n    return (\n      <li className=\"Line-item\">\n        <div className=\"Line-item__img\">\n          {this.props.line_item.variant.image ? <img src={this.props.line_item.variant.image.src} alt={`${this.props.line_item.title} product shot`}/> : null}\n        </div>\n        <div className=\"Line-item__content\">\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__variant-title\">\n              {this.props.line_item.variant.title}\n            </div>\n            <span className=\"Line-item__title\">\n              {this.props.line_item.title}\n            </span>\n          </div>\n          <div className=\"Line-item__content-row\">\n            <div className=\"Line-item__quantity-container\">\n              <button className=\"Line-item__quantity-update\" onClick={() => this.decrementQuantity(this.props.line_item.id)}>-</button>\n              <span className=\"Line-item__quantity\">{this.props.line_item.quantity}</span>\n              <button className=\"Line-item__quantity-update\" onClick={() => this.incrementQuantity(this.props.line_item.id)}>+</button>\n            </div>\n            <span className=\"Line-item__price\">\n              $ { (this.props.line_item.quantity * this.props.line_item.variant.price).toFixed(2) }\n            </span>\n            <button className=\"Line-item__remove\" onClick={()=> this.props.removeLineItemInCart(this.props.line_item.id)}>×</button>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default LineItem;\n","import React, {Component} from 'react';\nimport LineItem from './LineItem';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.openCheckout = this.openCheckout.bind(this);\n  }\n\n  openCheckout() {\n    window.open(this.props.checkout.webUrl);\n  }\n\n  render() {\n    let line_items = this.props.checkout.lineItems.edges.map((line_item) => {\n      return (\n        <LineItem\n          removeLineItemInCart={this.props.removeLineItemInCart}\n          updateLineItemInCart={this.props.updateLineItemInCart}\n          key={line_item.node.id.toString()}\n          line_item={line_item.node}\n        />\n      );\n    });\n\n    return (\n      <div className={`Cart ${this.props.isCartOpen ? 'Cart--open' : ''}`}>\n        <header className=\"Cart__header\">\n          <h2>Cart</h2>\n          <button\n            onClick={this.props.handleCartClose}\n            className=\"Cart__close\">\n            ×\n          </button>\n        </header>\n        <ul className=\"Cart__line-items\">\n          {line_items}\n        </ul>\n        <footer className=\"Cart__footer\">\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Subtotal</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.subtotalPrice}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Taxes</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalTax}</span>\n            </div>\n          </div>\n          <div className=\"Cart-info clearfix\">\n            <div className=\"Cart-info__total Cart-info__small\">Total</div>\n            <div className=\"Cart-info__pricing\">\n              <span className=\"pricing\">$ {this.props.checkout.totalPrice}</span>\n            </div>\n          </div>\n          <button className=\"Cart__checkout button\" onClick={this.openCheckout}>Checkout</button>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Cart;\n","import React, {Component} from 'react';\nimport { graphql } from 'react-apollo';\nimport {flowRight as compose} from 'lodash';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nclass CustomerAuth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      nonFieldErrorMessage: null,\n      emailErrorMessage: null,\n      passwordErrorMessage: null\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.createCustomerAccount = this.createCustomerAccount.bind(this);\n    this.resetErrorMessages = this.resetErrorMessages.bind(this);\n    this.resetInputFields = this.resetInputFields.bind(this);\n  }\n\n  static propTypes = {\n    customerCreate: PropTypes.func.isRequired,\n    customerAccessTokenCreate: PropTypes.func.isRequired,\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  resetErrorMessages(){\n    this.setState({\n      nonFieldErrorMessage: null,\n      emailErrorMessage: null,\n      passwordErrorMessage: null\n    });\n  }\n\n  resetInputFields(){\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  handleSubmit(email, password){\n    this.resetErrorMessages();\n    if (this.props.newCustomer) {\n      this.createCustomerAccount(email, password)\n    } else {\n      this.loginCustomerAccount(email, password)\n    }\n  }\n\n  createCustomerAccount(email, password){\n    const input = {\n      email: email,\n      password: password\n    }\n    this.props.customerCreate(\n      { variables: { input }\n      }).then((res) => {\n        if (res.data.customerCreate.customer){\n           this.props.closeCustomerAuth();\n           this.props.showAccountVerificationMessage();\n        } else {\n          res.data.customerCreate.userErrors.forEach(function (error) {\n            if (error.field) {\n              this.setState({\n                [error.field + \"ErrorMessage\"]: error.message\n              });\n            } else {\n              this.setState({\n                nonFieldErrorMessage: error.message\n              });\n            }\n          }.bind(this));\n        }\n    });\n  }\n\n  loginCustomerAccount(email, password){\n    const input = {\n      email: email,\n      password: password\n    }\n    this.props.customerAccessTokenCreate(\n      { variables: { input }\n      }).then((res) => {\n      if (res.data.customerAccessTokenCreate.customerAccessToken) {\n        this.props.associateCustomerCheckout(res.data.customerAccessTokenCreate.customerAccessToken.accessToken);\n      } else {\n        res.data.customerAccessTokenCreate.userErrors.forEach(function (error) {\n          if (error.field != null) {\n            this.setState({\n              [error.field + \"ErrorMessage\"]: error.message\n            });\n          } else {\n            this.setState({\n              nonFieldErrorMessage: error.message\n            });\n          }\n        }.bind(this));\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className={`CustomerAuth ${this.props.isCustomerAuthOpen ? 'CustomerAuth--open' : ''}`}>\n        <button\n          onClick={() => { this.props.closeCustomerAuth(); this.resetErrorMessages(); this.resetInputFields();}}\n          className=\"CustomerAuth__close\">\n          ×\n        </button>\n        <div className=\"CustomerAuth__body\">\n          <h2 className=\"CustomerAuth__heading\">{this.props.newCustomer ? 'Create your Account' : 'Log in to your account'}</h2>\n          {this.state.nonFieldErrorMessage &&\n            <div className=\"error\">{this.state.nonFieldErrorMessage}</div>\n          }\n          <label className=\"CustomerAuth__credential\">\n            <input className=\"CustomerAuth__input\" type=\"email\" placeholder=\"Email\" name={\"email\"} value={this.state.email} onChange={this.handleInputChange}></input>\n            {this.state.emailErrorMessage &&\n              <div className=\"error\">{this.state.emailErrorMessage}</div>\n            }\n          </label>\n          <label className=\"CustomerAuth__credential\">\n            <input className=\"CustomerAuth__input\" type=\"password\" placeholder=\"Password\" name={\"password\"} value={this.state.password} onChange={this.handleInputChange}></input>\n            {this.state.passwordErrorMessage &&\n              <div className=\"error\">{this.state.passwordErrorMessage}</div>\n            }\n          </label>\n          <button className=\"CustomerAuth__submit button\" type=\"submit\" onClick={() => this.handleSubmit(this.state.email, this.state.password)}>{this.props.newCustomer ? 'Create Account' : 'Log in'}</button>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nconst customerCreate = gql`\n  mutation customerCreate($input: CustomerCreateInput!) {\n    customerCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customer {\n        id\n      }\n    }\n  }\n`;\n\nconst customerAccessTokenCreate = gql`\n  mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n\nconst CustomerAuthWithMutation = compose(\n  graphql(customerCreate, {name: \"customerCreate\"}),\n  graphql(customerAccessTokenCreate, {name: \"customerAccessTokenCreate\"})\n)(CustomerAuth);\n\nexport default CustomerAuthWithMutation;\n","import gql from 'graphql-tag';\n\nconst CheckoutFragment = gql`\n  fragment CheckoutFragment on Checkout {\n    id\n    webUrl\n    totalTax\n    subtotalPrice\n    totalPrice\n    lineItems (first: 250) {\n      edges {\n        node {\n          id\n          title\n          variant {\n            id\n            title\n            image {\n              src\n            }\n            price\n          }\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const createCheckout = gql`\n  mutation checkoutCreate ($input: CheckoutCreateInput!){\n    checkoutCreate(input: $input) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsAdd = gql`\n  mutation checkoutLineItemsAdd ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsUpdate = gql`\n  mutation checkoutLineItemsUpdate ($checkoutId: ID!, $lineItems: [CheckoutLineItemUpdateInput!]!) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsRemove = gql`\n  mutation checkoutLineItemsRemove ($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(checkoutId: $checkoutId, lineItemIds: $lineItemIds) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutCustomerAssociate = gql`\n  mutation checkoutCustomerAssociate($checkoutId: ID!, $customerAccessToken: String!) {\n    checkoutCustomerAssociate(checkoutId: $checkoutId, customerAccessToken: $customerAccessToken) {\n      userErrors {\n        field\n        message\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport function addVariantToCart(variantId, quantity){\n  this.props.checkoutLineItemsAdd(\n    { variables: { checkoutId: this.state.checkout.id, lineItems:  [{variantId, quantity: parseInt(quantity, 10)}] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsAdd.checkout\n    });\n  });\n\n  this.handleCartOpen();\n}\n\nexport function updateLineItemInCart(lineItemId, quantity){\n  this.props.checkoutLineItemsUpdate(\n    { variables: { checkoutId: this.state.checkout.id, lineItems: [{id: lineItemId, quantity: parseInt(quantity, 10)}] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsUpdate.checkout\n    });\n  });\n}\n\nexport function removeLineItemInCart(lineItemId){\n  this.props.checkoutLineItemsRemove(\n    { variables: { checkoutId: this.state.checkout.id, lineItemIds: [lineItemId] }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsRemove.checkout\n    });\n  });\n}\n\nexport function associateCustomerCheckout(customerAccessToken){\n  this.props.checkoutCustomerAssociate(\n    { variables: { checkoutId: this.state.checkout.id, customerAccessToken: customerAccessToken }\n    }).then((res) => {\n    this.setState({\n      checkout: res.data.checkoutCustomerAssociate.checkout,\n      isCustomerAuthOpen: false\n    });\n  });\n}\n","import React, { Component } from 'react';\nimport Product from './components/Product';\nimport Cart from './components/Cart';\nimport CustomerAuthWithMutation from './components/CustomerAuth';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'react-apollo';\nimport {flowRight as compose} from 'lodash';\nimport gql from 'graphql-tag';\nimport {\n  createCheckout,\n  checkoutLineItemsAdd,\n  checkoutLineItemsUpdate,\n  checkoutLineItemsRemove,\n  checkoutCustomerAssociate,\n  addVariantToCart,\n  updateLineItemInCart,\n  removeLineItemInCart,\n  associateCustomerCheckout\n} from './checkout';\n\n// class Iframe extends Component{ \n//   render() {\n//   return(         \n//     <div className=\"quitz-wrapper\">          \n//       <iframe src={this.props.src} height={this.props.height} width={this.props.width}/>         \n//     </div>\n//   )\n// }\n// }\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isCartOpen: false,\n      isCustomerAuthOpen: false,\n      isNewCustomer: false,\n      products: [],\n      checkout: { lineItems: { edges: [] } },\n      pageQuiz: 1,\n      selectedOption: 'option1',\n      selectedOption2: 'option1'\n\n    };\n\n    this.handleCartClose = this.handleCartClose.bind(this);\n    this.handleCartOpen = this.handleCartOpen.bind(this);\n    this.openCustomerAuth = this.openCustomerAuth.bind(this);\n    this.closeCustomerAuth = this.closeCustomerAuth.bind(this);\n    this.addVariantToCart = addVariantToCart.bind(this);\n    this.updateLineItemInCart = updateLineItemInCart.bind(this);\n    this.removeLineItemInCart = removeLineItemInCart.bind(this);\n    this.showAccountVerificationMessage = this.showAccountVerificationMessage.bind(this);\n    this.associateCustomerCheckout = associateCustomerCheckout.bind(this);\n    this.openNextQuitzPage = this.openNextQuitzPage.bind(this); \n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.handleOptionChange_YesNo = this.handleOptionChange_YesNo.bind(this);\n     \n    \n  }\n\n  componentWillMount() {\n    this.props.createCheckout({\n      variables: {\n        input: {}\n      }}).then((res) => {\n      this.setState({\n        checkout: res.data.checkoutCreate.checkout\n      });\n    });\n  }\n\n  static propTypes = {\n    data: PropTypes.shape({\n      loading: PropTypes.bool,\n      error: PropTypes.object,\n      shop: PropTypes.object,\n    }).isRequired,\n    createCheckout: PropTypes.func.isRequired,\n    checkoutLineItemsAdd: PropTypes.func.isRequired,\n    checkoutLineItemsUpdate: PropTypes.func.isRequired\n  }\n\n  handleCartOpen() {\n    this.setState({\n      isCartOpen: true,\n    });\n  }\n\n  handleCartClose() {\n    this.setState({\n      isCartOpen: false,\n    });\n  }\n\n  //++ Ivan K\n  openNextQuitzPage() {\n    this.setState({\n      pageQuiz: this.state.pageQuiz+1,\n    });\n  }\n  //-- Ivan K\n\n  openCustomerAuth(event) {\n    if (event.target.getAttribute('data-customer-type') === \"new-customer\") {\n      this.setState({\n        isNewCustomer: true,\n        isCustomerAuthOpen: true\n      });\n    } else {\n      this.setState({\n        isNewCustomer: false,\n        isCustomerAuthOpen: true\n      });\n    }\n  }\n\n  showAccountVerificationMessage(){\n    this.setState({ accountVerificationMessage: true });\n    setTimeout(() => {\n     this.setState({\n       accountVerificationMessage: false\n     })\n   }, 5000);\n  }\n\n  closeCustomerAuth() {\n    this.setState({\n      isCustomerAuthOpen: false,\n    });\n  }\n\n    //+ Ivan K\n    addVariantToCart_Test(variantId, quantity) {\n      console.log('postMessage', 'setItemToCart_AfterQuiz');\n      window.parent.postMessage({\"setItemToCart_AfterQuiz\": [1,2,3,4,5,6]}, \"*\");\n    }\n\n    handleOptionChange(changeEvent) {\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n    }\n\n    handleOptionChange_YesNo(changeEvent) {\n      this.setState({\n        selectedOption2: changeEvent.target.value\n      });\n    }\n  //- Ivan K\n\n  render() {\n    // console.log(this.props)\n    if (this.props.data.loading) {\n      return <p className=\"loading\">Loading ...</p>;\n    }\n\n    if (this.props.data.error) {\n      return <p>{this.props.data.error.message}</p>;\n    }\n \n    if (this.state.pageQuiz == 1) {\n      return (\n        <div className=\"App\">\n          <div className=\"Flash__message-wrapper\">\n            <p className={`Flash__message ${this.state.accountVerificationMessage ? 'Flash__message--open' : ''}`}>We have sent you an email, please click the link included to verify your email address</p>\n          </div>\n          \n          <header className=\"App__header\">\n            <div className=\"App__title\">\n              <h1 className=\"mg-150\">The Ikebanna Box</h1>\n              <h2>Give Them a Personalized Flower Box</h2>\n              <a href=\"#finder-quiz-1781\" className=\"button btn slideshow__btn\" onClick={this.openNextQuitzPage}>Begin The Flower Quiz</a>\n            </div>\n          </header>\n\n          {/* <div className=\"Product-wrapper\">\n            { this.props.data.shop.products.edges.map(product =>\n              <Product addVariantToCart={this.addVariantToCart} checkout={this.state.checkout} key={product.node.id.toString()} product={product.node} />\n            )}\n          </div>\n          */}\n        </div>\n      );\n    }\n\n    if (this.state.pageQuiz == 2) {\n      return (\n        <div className=\"App\">\n          <div className=\"App__title\">\n              <h1>Question 1/2</h1>\n          </div>\n    \n          <div id=\"content\" class=\"mui-container-fluid\">\n          <div class=\"mui-col-sm-10 mui-col-sm-offset-1\">\n          <br></br>\n          <br></br>\n          <h2>Select your favorite color? </h2>\n          <div class=\"mui-divider\"></div>\n          <br></br>\n          <form className=\"form-color\">\n          <div class=\"mui--text-black-54 mui--text-body2\">\n            <img src=\"https://whai-dashboard.s3.us-east-2.amazonaws.com/stores/ikebanna.myshopify.com/395A0282.jpg\" alt=\"Color\" width=\"200\" height=\"100\"></img>\n            <input type=\"radio\" value=\"option1\" checked={this.state.selectedOption === 'option1'} onChange={this.handleOptionChange} /> Red</div>\n  \n          <div class=\"mui--text-black-54 mui--text-body2\">\n            <img src=\"https://whai-dashboard.s3.us-east-2.amazonaws.com/stores/ikebanna.myshopify.com/395A0283.jpg\" alt=\"Color\" width=\"200\" height=\"100\"></img>\n            <input type=\"radio\" value=\"option2\" checked={this.state.selectedOption === 'option2'} onChange={this.handleOptionChange}/>Blue</div>\n          \n          <div class=\"mui--text-black-54 mui--text-body2\">\n          <img src=\"https://whai-dashboard.s3.us-east-2.amazonaws.com/stores/ikebanna.myshopify.com/395A0281.jpg\" alt=\"Color\" width=\"200\" height=\"100\"></img>\n          <input type=\"radio\" value=\"option3\"  checked={this.state.selectedOption === 'option3'} onChange={this.handleOptionChange}/>Green</div>\n       \n          </form>\n          </div>\n    \n          </div>\n          <div className='btn-wrapper_block'>\n            <a href=\"#finder-quiz-1781\" className=\"button btn slideshow__btn\" onClick={this.openNextQuitzPage}>NEXT</a>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (this.state.pageQuiz == 3) {\n      return (\n        <div className=\"App\">\n          <div className=\"App__title\">\n              <h1>Question 2/2</h1>\n          </div>\n    \n          <div id=\"content\" class=\"mui-container-fluid\">\n          <div class=\"mui-col-sm-10 mui-col-sm-offset-1\">\n          <br></br>\n          <br></br>\n          <h2>Do you want to get a big box?</h2>\n          <div class=\"mui-divider\"></div>\n          <br></br>\n          <form>\n          <div class=\"mui--text-black-54 mui--text-body2\">\n            <input type=\"radio\" value=\"option1\" checked={this.state.selectedOption2 === 'option1'} onChange={this.handleOptionChange_YesNo} /> Yes</div>\n          <br></br>\n          <div class=\"mui--text-black-54 mui--text-body2\">\n            <input type=\"radio\" value=\"option2\" checked={this.state.selectedOption2 === 'option2'} onChange={this.handleOptionChange_YesNo}/>No</div>\n          <br></br>\n          <br></br> \n          </form>\n          </div>\n    \n          </div>\n          <div className='btn-wrapper_block'>\n            <a href=\"#finder-quiz-1781\" className=\"button btn slideshow__btn\" onClick={this.openNextQuitzPage}>NEXT</a>\n          </div>\n\n        </div>\n      );\n    }\n\n    if (this.state.pageQuiz == 4) {\n      return (\n        <div className=\"App\">\n           <div className=\"App__title\">\n              <h1>Recommend For You</h1>\n          </div>\n          <div className=\"Product-wrapper\">\n            { this.props.data.shop.products.edges.map(product =>\n              <Product addVariantToCart={this.addVariantToCart} checkout={this.state.checkout} key={product.node.id.toString()} product={product.node} />\n            )}\n          </div>\n\n          <div className='btn-wrapper_block'>\n            <a href=\"#finder-quiz-1781\" className=\"button btn slideshow__btn\" onClick={() => this.addVariantToCart_Test('variant.id', 'variantQuantity')}>ADD TO CART</a>\n          </div>\n\n        </div>\n      );\n    }\n\n\n    // THEME>LIQUID\n      //Ivan K\t+++++ Get selected items from Iframe(Quiz) AND add it to cart ++++  \n      // <script> \n      // window.addEventListener('message', function(event) {\n      //      if(event.data['setItemToCart_AfterQuiz']) {\n      //        \tconsole.log('setItemToCart_AfterQuiz',event.data);\n      // \t\t//\tconst link_url = 'https://ikebanna.myshopify.com/cart/33707716706363:4';\n      //       \t//\twindow.open(link_url);\n      //       \tjQuery.post('/cart/add.js',{\n      //             \tquantity: 1,\n      //             \tid: 33707716706363\n      //         \t})\n      //       \t.always( function(){\n      //       \t\twindow.location.href=\"/cart\"; \n      //       \t});   \n      //      }\n      //   });\n      //  </script>\n      //\n      // <iframe src=\"https://khrulev.github.io/quiz-mvp/\" title=\"Admin Quiz App\" width=\"800\" height=\"800\"></iframe> <br /> TEST USER UI FOR QUIZ <br /> <br /> <iframe src=\"https://khrulev.github.io/gh-test/\" title=\"Ikebanna Quiz App\" width=\"800\" height=\"600\"></iframe>\n      //\n      //Ivan K\t---- Get selected items from Iframe(Quiz) AND add it to cart ---- \n  \n\n    // ++++++++++  OLD NATIVE VERSION\n    // return (\n    //   <div className=\"App\">\n    //     <div className=\"Flash__message-wrapper\">\n    //       <p className={`Flash__message ${this.state.accountVerificationMessage ? 'Flash__message--open' : ''}`}>We have sent you an email, please click the link included to verify your email address</p>\n    //     </div>\n    //     <CustomerAuthWithMutation\n    //       closeCustomerAuth={this.closeCustomerAuth}\n    //       isCustomerAuthOpen={this.state.isCustomerAuthOpen}\n    //       newCustomer={this.state.isNewCustomer}\n    //       associateCustomerCheckout={this.associateCustomerCheckout}\n    //       showAccountVerificationMessage={this.showAccountVerificationMessage}\n    //     />\n    //     <header className=\"App__header\">\n    //       <ul className=\"App__nav\">\n    //         <li className=\"button App__customer-actions\" onClick={this.openCustomerAuth} data-customer-type=\"new-customer\">Create an Account</li>\n    //         <li className=\"login App__customer-actions\" onClick={this.openCustomerAuth}>Log in</li>\n    //       </ul>\n    //       {!this.state.isCartOpen &&\n    //         <div className=\"App__view-cart-wrapper\">\n    //           <button className=\"App__view-cart\" onClick={()=> this.setState({isCartOpen: true})}>Cart</button>\n    //         </div>\n    //       }\n    //       <div className=\"App__title\">\n    //         <h1>{this.props.data.shop.name}: React Example</h1>\n    //         <h2>{this.props.data.shop.description}</h2>\n    //       </div>\n    //     </header>\n    //     {/* <Iframe src=\"https://quiz.askwhai.com/?env=production&quiz=1781&store=ikebanna.myshopify.com\" height=\"600px\" width=\"100%\" />  */}\n    //     <div className=\"Product-wrapper\">\n    //       { this.props.data.shop.products.edges.map(product =>\n    //         <Product addVariantToCart={this.addVariantToCart} checkout={this.state.checkout} key={product.node.id.toString()} product={product.node} />\n    //       )}\n    //     </div>\n    //     <Cart\n    //       removeLineItemInCart={this.removeLineItemInCart}\n    //       updateLineItemInCart={this.updateLineItemInCart}\n    //       checkout={this.state.checkout}\n    //       isCartOpen={this.state.isCartOpen}\n    //       handleCartClose={this.handleCartClose}\n    //       customerAccessToken={this.state.customerAccessToken}\n    //     />\n    //   </div>\n    // );\n  }\n}\n\nconst query = gql`\n  query query {\n    shop {\n      name\n      description\n      products(first:20) {\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          node {\n            id\n            title\n            options {\n              id\n              name\n              values\n            }\n            variants(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  id\n                  title\n                  selectedOptions {\n                    name\n                    value\n                  }\n                  image {\n                    src\n                  }\n                  price\n                }\n              }\n            }\n            images(first: 250) {\n              pageInfo {\n                hasNextPage\n                hasPreviousPage\n              }\n              edges {\n                node {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AppWithDataAndMutation = compose(\n  graphql(query),\n  graphql(createCheckout, {name: \"createCheckout\"}),\n  graphql(checkoutLineItemsAdd, {name: \"checkoutLineItemsAdd\"}),\n  graphql(checkoutLineItemsUpdate, {name: \"checkoutLineItemsUpdate\"}),\n  graphql(checkoutLineItemsRemove, {name: \"checkoutLineItemsRemove\"}),\n  graphql(checkoutCustomerAssociate, {name: \"checkoutCustomerAssociate\"})\n)(App);\n\nexport default AppWithDataAndMutation;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport './app.css';\n\n// const httpLink = createHttpLink({ uri: 'https://graphql.myshopify.com/api/graphql' })\nconst httpLink = createHttpLink({ uri: 'https://ikebanna.myshopify.com/api/graphql' })\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    'X-Shopify-Storefront-Access-Token': '2ab194bb1908b09935b0629edb28f45b'\n  }\n}))\n\nconst client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render((\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}